image: python
stages:
    - lint
    - sectest
    - build
    - splunktest

delint:
    stage: lint
    before_script:
        - pip install pylint
        - pip install requests
    script:
        - pylint ${CI_PROJECT_DIR}/bin/*.py
    tags:
        - docker

sectests:
    stage: sectest
    before_script:
        - pip install bandit
    script:
        - bandit -r -x ${CI_PROJECT_DIR}/bin/defusedxml ${CI_PROJECT_DIR}/bin
    tags:
        - docker

build:
    stage: build
    script:
        - git archive --prefix ${CI_PROJECT_NAME}/ --format tar.gz ${CI_COMMIT_SHA} -o ${CI_PROJECT_NAME}.spl
    artifacts:
        paths:
            - ${CI_PROJECT_NAME}.spl

splunktest:
    stage: splunktest
    before_script:
        - wget --output-document splunk-appinspect.tar.gz https://download.splunk.com/misc/appinspect/splunk-appinspect-latest.tar.gz
        - pip install splunk-appinspect.tar.gz
    script:
    - wget --output-document splunk-appinspect.tar.gz https://download.splunk.com/misc/appinspect/splunk-appinspect-latest.tar.gz
    - pip install splunk-appinspect.tar.gz 
    - mkdir /tmp/${CI_PROJECT_NAME}
    - git archive --format tar HEAD | tar --exclude="*/.*"  --exclude="*/node_modules" --exclude="*/jsx" --exclude="*/._*" --exclude="*/*.pyc" --exclude="./local/" --exclude="./metadata/local.meta" -xC /tmp/${CI_PROJECT_NAME}
    - splunk-appinspect inspect /tmp/${CI_PROJECT_NAME} --mode precert --included-tags cloud
    - splunk-appinspect inspect /tmp/${CI_PROJECT_NAME} --mode precert --included-tags cloud |grep "error:\\s 0\|failure:\s 0"
    - echo "Pay attention to the values above ^^ both will cause your app to be rejected if they're > 0"

    tags: 
        - docker

