<form version="1.1">
  <label>Broken Hosts Information</label>
  <fieldset submitButton="true">
    <input type="time" token="time_tok" searchWhenChanged="true">
      <label>Time Picker</label>
      <default>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </default>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>Current Alerts</title>
      <table>
        <title>Shows all currently alerting data sources.</title>
        <search>
          <query>index=summary source="bh_stats_gen" NOT [|inputlookup bh_suppressions | rename index AS orig_index, sourcetype AS orig_sourcetype, host AS orig_host | table orig_index, orig_sourcetype, orig_host | format] | `bh_alert_additions` | rex field=eventtype "bh_aggregate-(?&lt;aggregate_fields&gt;.*)" | eval aggregate_fields=if(isnull(aggregate_fields),orig_index.",".orig_sourcetype.",".orig_host,aggregate_fields)
| stats max(latest_time) as latest_time values(eventtype) as eventtype sum(count) as count by aggregate_fields | rex field=aggregate_fields "(?&lt;index&gt;[^,]+),(?&lt;sourcetype&gt;[^,]+),(?&lt;host&gt;.*)"
| eval host=lower(host),index=lower(index),sourcetype=lower(sourcetype)
| search NOT [|inputlookup bh_suppressions | table index, sourcetype, host | format]
| `bh_expectedTime_lookup`
| convert auto(suppressUntil) 
| fillnull value=`default_expected_time` lateSecs
| eval lateSecs=if(suppressUntil &gt; now(),0,lateSecs) 
| eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0)
| eval status=if(lateSecs != "0" AND ((latest_time &lt; lastAllowed) OR (latest_time &gt; now() + 3000)) AND (now() - latest_time &lt; `ignore_after`) AND searchmatch("NOT eventtype=bh_suppress*") AND count &gt; `min_count`, "CRITICAL", "OK")
| where status=="CRITICAL"
| eval howLateSecs=now() - latest_time 
| sort latest_time
| convert ctime(lastAllowed) AS lastAllowed, ctime(latest_time) AS latest_time
| table index, sourcetype, host, aggregate_fields, count, status, latest_time, lastAllowed, lateSecs
| rename index AS Index, sourcetype AS Sourcetype, host AS Host, count AS "Log Source Event Count", status AS Status, latest_time AS "Last Log Seen", lastAllowed AS "Timestamp of Threshold for Critical Status", lateSecs AS "Threshold (in Seconds)", suppressUntil_commented AS "Suppression Information with Comments", aggregate_fields AS "Data Source with Aggregates Applied"</query>
          <earliest>-30d@d</earliest>
          <latest>+7d@d</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Data Sources Reporting from the Future</title>
      <table>
        <title>Shows all data sources that are reporting timestamps in the future. Results do not exclude suppressed aggregates.</title>
        <search>
          <query>| tstats max(_time) as latest_time where index=* by _time, index, sourcetype, host span=1d
| eval host=lower(host) | eval index=lower(index) | eval sourcetype=trim(lower(sourcetype), "\"")
| stats max(latest_time) as latest_time by _time index, sourcetype, host
| search NOT [|inputlookup bh_suppressions | table index, sourcetype, host | format]
| eval howLateSecs=now() - latest_time
| eval suppressDate=strftime(suppressUntil,"%D %H:%M:%S")
| stats min(howLateSecs) as howLateSecs max(latest_time) as latest_time by host sourcetype index
| where (latest_time &gt; now() + 100) AND (now() - latest_time &lt; `ignore_after`) | sort 0 - howLateSecs
| eval howLate=if(howLateSecs&lt;0,tostring(abs(howLateSecs),"duration"),tostring(howLateSecs,"duration")) | rex field=howLate mode=sed "s/\+/ days /" | rex field=howLate mode=sed "s/^1 days/1 day /"
| convert ctime(latest_time) AS latest_time
| table index, sourcetype, host, howLate, latest_time
| rename howLate AS "Time Ahead" index AS "Event Index" sourcetype AS "Event Sourcetype" host AS "Event Host", latest_time AS "Latest Reported Timestamp"</query>
          <earliest>now</earliest>
          <latest>+7d@d</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Suppressed Log Sources Receiving Data</title>
      <table>
        <title>This panel shows log sources that are suppressed in expectedTime that have received logs within the time range selected above.</title>
        <search>
          <query>index=summary source="bh_stats_gen" [|inputlookup bh_suppressions | rename index AS orig_index, sourcetype AS orig_sourcetype, host AS orig_host | table orig_index, orig_sourcetype, orig_host | format] | `bh_alert_additions`  | rex field=eventtype "bh_aggregate-(?&lt;aggregate_fields&gt;.*)" | eval aggregate_fields=if(isnull(aggregate_fields),orig_index.",".orig_sourcetype.",".orig_host,aggregate_fields)
| stats max(latest_time) as latest_time values(eventtype) as eventtype sum(count) as count by aggregate_fields | rex field=aggregate_fields "(?&lt;index&gt;[^,]+),(?&lt;sourcetype&gt;[^,]+),(?&lt;host&gt;.*)"
| `bh_expectedTime_lookup`
| convert auto(suppressUntil)
| fillnull value=`default_expected_time` lateSecs
| eval lateSecs=if(suppressUntil &gt; now(),0,lateSecs) 
| eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0) 
| eval status=if(lateSecs != "0" AND ((latest_time &lt; lastAllowed) OR (latest_time &gt; now() + 3000)) AND (now() - latest_time &lt; `ignore_after`) AND searchmatch("NOT eventtype=bh_suppress*") AND count &gt; `min_count`, "CRITICAL", "OK")
| convert ctime(suppressUntil) AS suppressTimestamp
| eval suppressUntil_commented=case((suppressUntil=0 AND lateSecs=0),"Permanent Suppression - " + comments, (suppressUntil!=0 OR lateSecs=0), suppressTimestamp + " - " + comments, 1==1, "Not Suppressed")
| convert ctime(lastAllowed) AS lastAllowed, ctime(latest_time) AS latest_time
| table index, sourcetype, host, count, status, latest_time, lastAllowed, lateSecs, suppressUntil_commented
| search suppressUntil_commented!="Not Suppressed"
| rename index AS Index, sourcetype AS Sourcetype, host AS Host, count AS "Log Source Event Count", status AS Status, latest_time AS "Last Log Seen", lastAllowed AS "Timestamp of Threshold for Critical Status", lateSecs AS "Threshold (in Seconds)", suppressUntil_commented AS "Suppression Information with Comments"</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>All Suppressions</title>
      <table>
        <title>This panel lists all suppressions found in bh_suppressions, regardless of whether they have logged within the selected time range or not. A value of '*' (wildcard) indicates that this suppression will apply to whatever index/sourcetype/host the non-wildcard fields come in to.</title>
        <search>
          <query>|inputlookup bh_suppressions 
| eval suppressUntil_epoch=if(suppressUntil!="0", round(strptime(suppressUntil, "%Y-%m-%d"),0), 0)
| where suppressUntil_epoch&gt;now() 
| eval suppressUntil=if(suppressUntil=0,"Permanent Suppression",suppressUntil)
| eval comments=suppressUntil + " - " + comments
| fields index, sourcetype, host, suppressUntil, comments 
| rename index AS "Index" sourcetype AS "Sourcetype" host AS "Host", comments as "Suppression Time with Comments", suppressUntil AS "Suppress Until"</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>All Aggregates</title>
      <table>
        <title>This panel lists all aggregates that have been created within Broken Hosts.</title>
        <search>
          <query>| rest splunk_server=local servicesNS/-/broken_hosts/saved/eventtypes | search title=bh_* | fields title eai:acl.app eai:acl.owner search | rename title AS Eventtype, eai:acl.app AS App, eai:acl.owner AS Owner, search AS Search</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Non-Suppressed Log Sources Receiving Data</title>
      <table>
        <title>This panel will show all non-suppressed log sources that have received data within the time range selected. Additional log sources may appear a longer time range is selected above.</title>
        <search>
          <query>index=summary source="bh_stats_gen" NOT [|inputlookup bh_suppressions | rename index AS orig_index, sourcetype AS orig_sourcetype, host AS orig_host | table orig_index, orig_sourcetype, orig_host | format] | `bh_alert_additions`  | rex field=eventtype "bh_aggregate-(?&lt;aggregate_fields&gt;.*)" | eval aggregate_fields=if(isnull(aggregate_fields),orig_index.",".orig_sourcetype.",".orig_host,aggregate_fields)
| stats max(latest_time) as latest_time values(eventtype) as eventtype sum(count) as count by aggregate_fields | rex field=aggregate_fields "(?&lt;index&gt;[^,]+),(?&lt;sourcetype&gt;[^,]+),(?&lt;host&gt;.*)"
| search NOT [|inputlookup bh_suppressions | table index, sourcetype, host | format]
| `bh_expectedTime_lookup`
| convert auto(suppressUntil)
| fillnull value=`default_expected_time` lateSecs
| eval lateSecs=if(suppressUntil &gt; now(),0,lateSecs) 
| eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0) 
| eval status=if(lateSecs != "0" AND ((latest_time &lt; lastAllowed) OR (latest_time &gt; now() + 3000)) AND (now() - latest_time &lt; `ignore_after`) AND searchmatch("NOT eventtype=bh_suppress*") AND count &gt; `min_count`, "CRITICAL", "OK")
| convert ctime(suppressUntil) AS suppressTimestamp
| eval suppressUntil_commented=case((suppressUntil=0 AND lateSecs=0),"Permanent Suppression - " + comments, (suppressUntil!=0 OR lateSecs=0), suppressTimestamp + " - " + comments, 1==1, "Not Suppressed")
| convert ctime(lastAllowed) AS lastAllowed, ctime(latest_time) AS latest_time
| search suppressUntil_commented="Not Suppressed"
| table index, sourcetype, host, count, status, latest_time, lastAllowed, lateSecs, comments
| rename index AS Index, sourcetype AS Sourcetype, host AS Host, count AS "Log Source Event Count", status AS Status, latest_time AS "Last Log Seen", lastAllowed AS "Timestamp of Threshold for Critical Status", lateSecs AS "Threshold (in Seconds)", suppressUntil_commented AS "Suppression Information with Comments", comments AS Comments</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
</form>