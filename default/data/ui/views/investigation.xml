<form version="1.1" theme="dark">
  <label>Broken Hosts Tuning/Investigation</label>
  <description>Fill out the at least the Index input to return results. Multiple selections are supported.</description>
  <fieldset submitButton="true">
    <input type="time" token="time_tok" searchWhenChanged="true">
      <label>Time Picker</label>
      <default>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="multiselect" token="index_tok" searchWhenChanged="true">
      <label>Index</label>
      <choice value="*">All</choice>
      <valuePrefix>"</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter>, </delimiter>
      <fieldForLabel>index</fieldForLabel>
      <fieldForValue>index</fieldForValue>
      <search>
        <query>| tstats summariesonly=true allow_old_summaries=true count by index
| sort 0 + index
| table index</query>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </search>
    </input>
    <input type="multiselect" token="sourcetype_tok" searchWhenChanged="true">
      <label>Sourcetype (Requires Index Selection)</label>
      <choice value="*">All</choice>
      <valuePrefix>"</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter>, </delimiter>
      <fieldForLabel>sourcetype</fieldForLabel>
      <fieldForValue>sourcetype</fieldForValue>
      <search>
        <query>| tstats summariesonly=true allow_old_summaries=true count where index IN ($index_tok$) by sourcetype
| sort 0 + sourcetype
| table sourcetype</query>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </search>
    </input>
    <input type="multiselect" token="host_tok" searchWhenChanged="true">
      <label>Host (Requires Sourcetype Selection)</label>
      <choice value="*">All</choice>
      <valuePrefix>"</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter>, </delimiter>
      <fieldForLabel>host</fieldForLabel>
      <fieldForValue>host</fieldForValue>
      <search>
        <query>| tstats summariesonly=true allow_old_summaries=true count where index IN ($index_tok$) sourcetype IN ($sourcetype_tok$) by host
| sort 0 + host
| table host</query>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </search>
    </input>
    <input type="multiselect" token="source_tok" searchWhenChanged="true">
      <label>Source (Requires Host Selection)</label>
      <choice value="*">All</choice>
      <valuePrefix>"</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter>, </delimiter>
      <fieldForLabel>source</fieldForLabel>
      <fieldForValue>source</fieldForValue>
      <search>
        <query>| tstats count summariesonly=true allow_old_summaries=true where index IN ($index_tok$) sourcetype IN ($sourcetype_tok$) host IN ($host_tok$) by source
| sort 0 + source
| table source</query>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </search>
    </input>
    <input type="checkbox" token="metadata_filter_tok" searchWhenChanged="true">
      <label>Initial stats filter (determines what fields are valid for charting)</label>
      <choice value="index">Index</choice>
      <choice value="sourcetype">Sourcetype</choice>
      <choice value="host">Host</choice>
      <choice value="source">Source</choice>
      <default>host</default>
      <initialValue>host</initialValue>
      <delimiter>, </delimiter>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>Historical Logging Pattern for Index: $index_tok$, Sourcetype: $sourcetype_tok$, Host: $host_tok$, Source: $source_tok$ Charted by $timechart_filter_tok$</title>
      <input type="dropdown" token="timechart_filter_tok" searchWhenChanged="true">
        <label>Field to Chart By</label>
        <choice value="index">Index</choice>
        <choice value="sourcetype">Sourcetype</choice>
        <choice value="host">Host</choice>
        <choice value="source">Source</choice>
        <default>host</default>
        <initialValue>host</initialValue>
      </input>
      <chart>
        <title>Make sure the field you are charting by is selected in the initial stats filter! Look for gaps to determine outages.</title>
        <search>
          <query>| tstats summariesonly=true allow_old_summaries=true count where index IN ($index_tok$) sourcetype IN ($sourcetype_tok$) host IN ($host_tok$) source IN ($source_tok$) by $metadata_filter_tok$, _time span=30m
| makecontinuous _time span=30m
| fillnull value=0
| timechart span=30m useother=false sum(count) by $timechart_filter_tok$</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Count</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Time Between Events Statistics for Index: $index_tok$, Sourcetype: $sourcetype_tok$, Host: $host_tok$, Source: $source_tok$ , Filtered By $metadata_filter_tok$</title>
      <table>
        <title>Determine the value to set lateSecs in expectedTime, based on the the frequency of outages and the below results. Consider aggregation or permanent suppression if the time between events for some entries are outliers compared to the rest of the results. Sort by Maximum Time Between Events column for possible threshold for aggregation given the current data source selection.</title>
        <search>
          <query>| tstats count WHERE index IN ($index_tok$) sourcetype IN ($sourcetype_tok$) host IN ($host_tok$) source IN ($source_tok$) by $metadata_filter_tok$, _time span=1s | streamstats window=2 range(_time) as duration by $metadata_filter_tok$ | stats p95(duration) as p95_gap, p99(duration) as p99_gap, avg(duration) as avg_gap, max(duration) as max_gap by $metadata_filter_tok$
| eval index=if(isnull(index), $index_tok$, index), sourcetype=if(isnull(sourcetype), $sourcetype_tok$, sourcetype), host=if(isnull(host), $host_tok$, host), source=if(isnull(source), $source_tok$, source) 
| eval avg_gap=tostring(round(avg_gap,2))+" seconds", p95_gap=tostring(round(p95_gap,2))+" seconds", p99_gap=tostring(round(p99_gap,2))+" seconds", max_gap=tostring(max_gap)+" seconds"| table index, sourcetype, host, source, avg_gap, p95_gap, p99_gap, max_gap
| rename index as Index, sourcetype AS Sourcetype, host AS Host, source AS Source, avg_gap AS "Average Time Between Events", p95_gap AS "95th Percentile Time Between Events", p99_gap AS "99th Percentile Time Between Events", max_gap AS "Maximum Time Between Events"</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
        </search>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Host Shutdown Investigation</title>
      <input type="time" token="latest_time" searchWhenChanged="true">
        <label>Shutdown Investigation Timerange</label>
        <default>
          <earliest>-4h@m</earliest>
          <latest>now</latest>
        </default>
      </input>
      <input type="dropdown" token="host" searchWhenChanged="true">
        <label>Host Selection (Requires Index/Sourcetype to be filled above)</label>
        <fieldForLabel>host</fieldForLabel>
        <fieldForValue>host</fieldForValue>
        <search>
          <query>| tstats summariesonly=true allow_old_summaries=true count where index IN ($index_tok$) sourcetype IN ($sourcetype_tok$) by host
| sort 0 + host
| table host</query>
          <earliest>-30d@d</earliest>
          <latest>now</latest>
        </search>
      </input>
    </panel>
  </row>
  <row>
    <panel>
      <title>Was Splunk stopped/restarted on $host$?</title>
      <single>
        <search>
          <query>index=_internal host=$host$ sourcetype=splunkd component=ShutDownHandler | eval min_time=if(_time&gt;now()-600,_time,_time+600) | eval max_time=_time+3600 | eval shutdown=1 | append [|makeresults | eval count=0 | eval host="$host$" | eval shutdown=0 | addinfo | eval min_time=$$info_min_time$$ | eval max_time=$$info_max_time$$] | stats count max(shutdown) as shutdown max(min_time) as min_time max(max_time) as max_time by host | map search="search index=_internal host=$$host$$ earliest=$$min_time$$ latest=$$max_time$$ | head 100 | append [|makeresults | eval host=\"$$host$$\"] | eval host=\"$$host$$\" | stats count by host | eval shutdown=\"$$shutdown$$\"" | eval result=case(shutdown&gt;0 AND count&gt;1, "Splunk was restarted", shutdown&gt;0 AND count=1, "Splunk was stopped", shutdown=0 AND count=1, "No Splunk internal logs from $host$", shutdown=0 AND count&gt;1, "Splunk was not stopped or restarted", true(), "unknown") | fields result | eval range=case(result=="Splunk was stopped","severe",result=="Splunk was restarted","high",result=="No Splunk internal logs from $host$","guarded",result=="Splunk was not stopped or restarted","low",result=="unknown","other",true(),"unknown")</query>
          <earliest>$latest_time.earliest$</earliest>
          <latest>$latest_time.latest$</latest>
        </search>
        <option name="field">result</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">0</option>
      </single>
    </panel>
    <panel>
      <title>Did $host$ have a Windows shut down/reboot event?</title>
      <single>
        <search>
          <query>`bh_wineventlog_index` host=$host$ EventCode=6005 OR EventCode=6006 OR EventCode=6008 OR EventCode=1074 | eval min_time=if(_time&gt;now()-600,_time,_time+600) | eval max_time=_time+3600 | eval shutdown=1 | append [|makeresults | eval count=0 | eval host="$host$" | eval shutdown=0 | addinfo | eval min_time=$$info_min_time$$ | eval max_time=$$info_max_time$$] | stats count max(shutdown) as shutdown max(min_time) as min_time max(max_time) as max_time by host | map search="search `wineventlog_index` host=$$host$$ earliest=$$min_time$$ latest=$$max_time$$ | head 100 | append [|makeresults | eval host=\"$$host$$\"] | eval host=\"$$host$$\" | stats count by host | eval shutdown=\"$$shutdown$$\"" | eval result=case(shutdown&gt;0 AND count&gt;1, "$host$ was rebooted", shutdown&gt;0 AND count=1, "$host$ was shut down", shutdown=0 AND count=1, "No windows eventlog from $host$", shutdown=0 AND count&gt;1, "$host$ was not shut down or rebooted", true(), "unknown") | fields result | eval range=case(result=="$host$ was shut down","severe",result=="$host$ was rebooted","high",result=="No windows eventlog from $host$","guarded",result=="$host$ was not shut down or rebooted","low",result=="unknown","other",true(),"unknown")</query>
          <earliest>$latest_time.earliest$</earliest>
          <latest>$latest_time.latest$</latest>
        </search>
        <option name="field">result</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">0</option>
      </single>
    </panel>
    <panel>
      <title>Did $host$ have a Linux shut down/reboot event?</title>
      <single>
        <search>
          <query>`bh_linuxoslog_index` sourcetype=linux_* host=$host$ "shut*down" OR reboot* | eval min_time=if(_time&gt;now()-600,_time,_time+600) | eval max_time=_time+3600 | eval shutdown=1 | append [|makeresults | eval count=0 | eval host="$host$" | eval shutdown=0 | addinfo | eval min_time=$$info_min_time$$ | eval max_time=$$info_max_time$$] | stats count max(shutdown) as shutdown max(min_time) as min_time max(max_time) as max_time by host | map search="search `linuxoslog_index` host=$$host$$ earliest=$$min_time$$ latest=$$max_time$$ | head 100 | append [|makeresults | eval host=\"$$host$$\"] | eval host=\"$$host$$\" | stats count by host | eval shutdown=\"$$shutdown$$\"" | eval result=case(shutdown&gt;0 AND count&gt;1, "$host$ was rebooted", shutdown&gt;0 AND count=1, "$host$ was shut down", shutdown=0 AND count=1, "No linux logs from $host$", shutdown=0 AND count&gt;1, "$host$ was not shut down or rebooted", true(), "unknown") | fields result | eval range=case(result=="$host$ was shut down","severe",result=="$host$ was rebooted","high",result=="No linux logs from host","guarded",result=="$host$ was not shut down or rebooted","low",result=="unknown","other",true(),"unknown")</query>
          <earliest>$latest_time.earliest$</earliest>
          <latest>$latest_time.latest$</latest>
        </search>
        <option name="field">result</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">0</option>
      </single>
    </panel>
  </row>
</form>