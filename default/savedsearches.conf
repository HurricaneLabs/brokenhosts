[Broken Hosts - Auto Sort]
cron_schedule = 8-59/10 * * * *
description = PLEASE READ DOCUMENTATION ON CUTOVER TO BH 5.0.0 AND DISABLE WHEN FINISHED. Automatically Sort the expectedTime suppression table in a way that prevents false positives on suppressed items.
disabled = 0
dispatch.earliest_time = -1d@d
dispatch.ttl = 300
display.general.timeRangePicker.show = 0
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
schedule_window = 5
action.webhook.enable_allowlist = 0
search = | inputlookup expectedTime\
| rex mode=sed field=index "s/\*/~/g" | rex mode=sed field=sourcetype "s/\*/~/g" | rex mode=sed field=host "s/\*/~/g"\
| eval order=case(\
comments LIKE("default entry%"), 29,\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",1,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",2,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",3,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil!="0",4,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil!="0",5,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs==0 AND suppressUntil!="0",6,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",7,\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",8,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",9,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",10,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",11,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil!="0",12,\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",13,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil!="0",14,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs!=0 AND suppressUntil!="0",15,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",16,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",17,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil=="0",18,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil=="0",19,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs==0 AND suppressUntil=="0",20,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil=="0",21,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",22,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",23,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",24,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",25,\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",26,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil=="0",27,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs!=0 AND suppressUntil=="0",28\
)\
| eval index=lower(index), sourcetype=lower(sourcetype), host=lower(host)\
| sort order index sourcetype host\
| rex mode=sed field=index "s/~/*/g" | rex mode=sed field=sourcetype "s/~/*/g" | rex mode=sed field=host "s/~/*/g"\
| fields - _key | table * \
| outputlookup create_empty=f override_if_empty=f expectedTime

[Broken Hosts - Auto Sort v5]
cron_schedule = 8-59/10 * * * *
description = Automatically Sort the expectedTime lookup to properly apply lateSecs values to alerting searches.
disabled = 1
dispatch.earliest_time = -1d@d
dispatch.ttl = 300
display.general.timeRangePicker.show = 0
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
schedule_window = 5
action.webhook.enable_allowlist = 0
search = | inputlookup expectedTime\
| rex mode=sed field=index "s/\*/~/g" | rex mode=sed field=sourcetype "s/\*/~/g" | rex mode=sed field=host "s/\*/~/g"\
| eval order=case(\
index!="~" AND sourcetype!="~" AND host!="~",1,\
index!="~" AND sourcetype!="~" AND host=="~",2,\
index!="~" AND sourcetype=="~" AND host!="~",3,\
index=="~" AND sourcetype!="~" AND host!="~",4,\
index=="~" AND sourcetype=="~" AND host!="~",5,\
index=="~" AND sourcetype!="~" AND host=="~",6,\
index!="~" AND sourcetype=="~" AND host=="~",7,\
comments LIKE("default entry%"), 8,\
index=="~" AND sourcetype=="~" AND host=="~",9)\
| eval index=lower(index), sourcetype=lower(sourcetype), host=lower(host)\
| sort order index sourcetype host\
| rex mode=sed field=index "s/~/*/g" | rex mode=sed field=sourcetype "s/~/*/g" | rex mode=sed field=host "s/~/*/g"\
| fields - _key | table * \
| outputlookup create_empty=f override_if_empty=f expectedTime

[Broken Hosts Alert Search]
alert.suppress = 1
alert.suppress.period = 24h
counttype = number of events
cron_schedule = */30 * * * *
description = Sample Broken Hosts Alert - uses summary data
disabled = 1
dispatch.earliest_time = -30d@d
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
action.webhook.enable_allowlist = 0
alert.track = 1
search = index=summary source="bh_stats_gen" NOT [|inputlookup bh_suppressions | rename index AS orig_index, sourcetype AS orig_sourcetype, host AS orig_host | table orig_index, orig_sourcetype, orig_host | format]\
| `bh_alert_additions` | typer | rex field=eventtype "bh_aggregate-(?<aggregate_fields>.*)" | eval aggregate_fields=if(isnull(aggregate_fields),orig_index.",".orig_sourcetype.",".orig_host,aggregate_fields)\
| stats max(latest_time) as latest_time values(eventtype) as eventtype sum(count) as count by aggregate_fields | rex field=aggregate_fields "(?<index>[^,]+),(?<sourcetype>[^,]+),(?<host>.*)"\
| `bh_expectedTime_lookup`\
| convert auto(suppressUntil)  | fillnull value=`default_expected_time` lateSecs\
| eval lateSecs=if(suppressUntil > now(),0,lateSecs) | eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0)\
| where lateSecs != "0" AND ((latest_time < lastAllowed) OR (latest_time > now() + 3000)) AND (now() - latest_time < `ignore_after`) AND searchmatch("NOT eventtype=bh_suppress*") AND count > `min_count`\
| eval howLateSecs=now() - latest_time | eval howLate=if(howLateSecs<0,"-".tostring(abs(howLateSecs),"duration"),tostring(howLateSecs,"duration"))\
| rex field=howLate mode=sed "s/\+/ days /" | rex field=howLate mode=sed "s/^1 days/1 day /"\
| eval suppressDate=strftime(suppressUntil,"%D %H:%M:%S") | sort latest_time | eval last=strftime(latest_time, "%D %H:%M:%S")\
| fields index, sourcetype, host, last, howLate\
| rename last AS "Time Of Last Data" howLate AS "Time Since Last Data"

[Broken Hosts Alert - by contact]
action.email = 1
action.email.format = csv
action.email.include.results_link = 0
action.email.message.alert = The alert condition for '$name$' was triggered.\
\
$result.Message$
alert.digest_mode = 0
alert.suppress = 1
alert.suppress.fields = contact,suppressfield
alert.suppress.period = 2h
alert.track = 0
counttype = number of events
cron_schedule = */30 * * * *
description = Sample Broken Hosts Alert - designed to allow you to send different data to different contacts
disabled = 1
dispatch.earliest_time = -30d@d
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
action.webhook.enable_allowlist = 0
search = index=summary source="bh_stats_gen" NOT [|inputlookup bh_suppressions | rename index AS orig_index, sourcetype AS orig_sourcetype, host AS orig_host | table orig_index, orig_sourcetype, orig_host | format]\
| `bh_alert_additions` | typer | rex field=eventtype "bh_aggregate-(?<aggregate_fields>.*)" | eval aggregate_fields=if(isnull(aggregate_fields),orig_index.",".orig_sourcetype.",".orig_host,aggregate_fields)\
| stats max(latest_time) as latest_time values(eventtype) as eventtype by aggregate_fields | rex field=aggregate_fields "(?<index>[^,]+),(?<sourcetype>[^,]+),(?<host>.*)"\
| `bh_expectedTime_lookup_contact`\
| convert auto(suppressUntil) | eval contact=if(contact="",null(),contact) | fillnull value=`default_contact` contact\
| fillnull value=`default_expected_time` lateSecs\
| eval lateSecs=if(suppressUntil > now(),0,lateSecs) | eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0)\
| where lateSecs != "0" AND ((latest_time < lastAllowed) OR (latest_time > now() + 3000)) AND (now() - latest_time < `ignore_after`) AND searchmatch("NOT eventtype=bh_suppress*")\
| eval howLateSecs=now() - latest_time | eval howLate=if(howLateSecs<0,"-".tostring(abs(howLateSecs),"duration"),tostring(howLateSecs,"duration"))\
| rex field=howLate mode=sed "s/\+/ days /" | rex field=howLate mode=sed "s/^1 days/1 day /"\
| eval suppressDate=strftime(suppressUntil,"%D %H:%M:%S") | sort latest_time | eval Last=strftime(latest_time, "%D %H:%M:%S")\
| eval message=aggregate_fields.", ".Last.", ".howLate."\n"\
| stats list(message) as Message, list(aggregate_fields) as suppressfield by contact\
| eval Message=mvappend("index, sourcetype, host, Time Of Last Data, Time Since Last Data\n",Message)

[bh_stats_gen]
action.summary_index = 1
alert.expires = 30m
alert.track = 0
cron_schedule = */10 * * * *
description = Generates stats for Broken Hosts alerts
dispatch.earliest_time = -36h@h
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
schedule_window = auto
search = | tstats count latest(_time) as latest_time latest(_indextime) as latest_indextime latest(date_zone) as latest_date_zone earliest(_time) as earliest_time earliest(_indextime) as earliest_indextime where _index_earliest=-10m@m `bh_stats_gen_constraints` by index, sourcetype, source, host\
| join type=left sourcetype [rest splunk_server=local /servicesNS/-/-/configs/conf-props | search rename=* | stats count by title, rename  | fields + title rename | rename title as sourcetype]\
| eval host=lower(host) | eval index=lower(index) | eval sourcetype=lower(sourcetype) | eval sourcetype_rename=trim(lower(rename), "\"")\
| `bh_stats_gen_additions`\
| eval _time=now() | fields - _raw, info_min_time

[Broken Hosts Alert - Volume Based Alerting]
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 */4 * * *
disabled = 1
dispatch.earliest_time = -30d@d
dispatch.latest_time = @h
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = index=summary source=bh_stats_gen orig_index IN (`bh_volume_alerting_indexes`)\
| bin _time span=4h\
| stats sum(count) AS hour_count by orig_index, _time\
| streamstats window=36 avg(hour_count) as moving_average\
| eval diff = hour_count - moving_average\
| eval moving_perc = (hour_count/moving_average) * 100\
| stats avg(hour_count) AS avg_hour_count, stdev(hour_count) AS stdev_hour_count, perc1(hour_count) AS perc_low_count, latest(hour_count) AS last_count latest(moving_average) as moving_average, latest(diff) AS diff, latest(moving_perc) AS moving_perc by orig_index\
| eval low_perc_ratio = perc_low_count/avg_hour_count\
| eval zscore = (last_count-avg_hour_count)/stdev_hour_count\
| where zscore < -3 OR (last_count < perc_low_count AND low_perc_ratio<.33)  OR moving_perc < 2\
| eval moving_perc = round(moving_perc, 2)."%" \
| table orig_index, last_count, avg_hour_count, perc_low_count, moving_average, moving_perc, zscore\
| rename orig_index AS Index, last_count AS "Current Count", avg_hour_count AS "Average Count", perc_low_count AS "First Percentile Low Count", moving_average AS "Moving Average", moving_perc AS "Current Count Percentage of Moving Average", zscore AS "Standard Score"

[Broken Hosts Alert Search - Volume Alerting with Seasonality]
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */60 * * * *
disabled = 1
dispatch.earliest_time = -30d@d
dispatch.latest_time = @d
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = index=summary source=bh_stats_gen orig_index IN (`bh_volume_alerting_indexes`)\
| bin _time span=1h\
| stats sum(count) AS hour_count by orig_index, _time\
| eval hour=strftime(_time,"%H")\
| eval month_day=strftime(_time, "%m-%d")\
| eval weekday=strftime(_time,"%a")\
| eval is_holiday=case(month_day=="01-01",1,month_day=="07-04",1,month_day=="11-25",1,month_day=="12-24",1,month_day=="12-31",1,1=1,0)\
| eval weekday_weekend=if((weekday=="Sun" OR weekday=="Sat"), "weekend", "weekday")\
| eval biz_hours=if((((hour < 8) OR (hour > 18)) OR (weekday_weekend=="weekend") OR is_holiday=1), "No", "Yes")\
| streamstats window=36 avg(hour_count) as moving_average\
| eval diff = hour_count - moving_average\
| eval moving_perc = (hour_count/moving_average) * 100\
| stats avg(hour_count) AS avg_hour_count, stdev(hour_count) AS stdev_hour_count, perc1(hour_count) AS perc_low_count, latest(hour_count) AS last_count latest(moving_average) as moving_average, latest(diff) AS diff, latest(moving_perc) AS moving_perc by orig_index, biz_hours\
| eval low_perc_ratio = perc_low_count/avg_hour_count\
| eval zscore = (last_count-avg_hour_count)/stdev_hour_count\
| where zscore < -3 OR (last_count < perc_low_count AND low_perc_ratio<.33)  OR moving_perc < 2\
| eval moving_perc = round(moving_perc, 2)."%" \
| table orig_index, biz_hours, last_count, avg_hour_count, perc_low_count, moving_average, moving_perc, zscore\
| rename orig_index AS Index, last_count AS "Current Count", avg_hour_count AS "Average Count", perc_low_count AS "First Percentile Low Count", moving_average AS "Moving Average", moving_perc AS "Current Count Percentage of Moving Average", zscore AS "Standard Score", biz_hours AS "Within Business Hours"

[Lookup Gen - bh_host_cache]
counttype = number of events
cron_schedule = 7 */4 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = now
dispatch.index_earliest = -4h
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = | tstats count, latest(_time) AS last_seen by host \
| eval key=host \
| outputlookup bh_host_cache key_field=key override_if_empty=f

[Lookup Gen - bh_index_cache]
counttype = number of events
cron_schedule = 26 */4 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = now
dispatch.index_earliest = -4h
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = | tstats count, latest(_time) AS last_seen by index \
| eval key=index \
| outputlookup bh_index_cache key_field=key override_if_empty=f

[Lookup Gen - bh_sourcetype_cache]
counttype = number of events
cron_schedule = 52 */4 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = now
dispatch.index_earliest = -4h
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = | tstats count, latest(_time) AS last_seen by sourcetype \
| eval key=sourcetype \
| outputlookup bh_sourcetype_cache key_field=key override_if_empty=f

[Broken Hosts - Populate bh_suppressions from expectedTime]
description = Run this search once upon upgrade from 4.x.x to 5.x.x
disabled = 0
dispatch.earliest_time = 0
dispatch.ttl = 300
display.general.timeRangePicker.show = 0
enableSched = 0
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = |inputlookup expectedTime\
| convert auto(suppressUntil)\
| fillnull value=`default_expected_time` lateSecs\
| eval lateSecs=if(suppressUntil > now(),0,lateSecs)\
| where (lateSecs=0 AND suppressUntil=0) OR suppressUntil > now()\
| eval suppressUntil=if(suppressUntil>0, strftime(suppressUntil, "%Y-%m-%d"), suppressUntil)\
| table comments, index, sourcetype, host, suppressUntil\
| outputlookup bh_suppressions

[Broken Hosts - Purge and Sort bh_suppressions]
cron_schedule = 8-59/10 * * * *
description = Remove expired supressions and sort remaining suppressions.
disabled = 1
dispatch.earliest_time = -1d@d
dispatch.ttl = 300
display.general.timeRangePicker.show = 0
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
schedule_window = 5
action.webhook.enable_allowlist = 0
search = |inputlookup bh_suppressions\
| eval suppress_epoch = round(strptime(suppressUntil, "%Y-%m-%d"), 0)\
| fillnull value=0 suppress_epoch\
| where (suppress_epoch > now()) OR suppress_epoch=0\
| rex mode=sed field=index "s/\*/~/g" | rex mode=sed field=sourcetype "s/\*/~/g" | rex mode=sed field=host "s/\*/~/g"\
| eval order=case(\
index!="~" AND sourcetype!="~" AND host!="~",1,\
index!="~" AND sourcetype!="~" AND host=="~",2,\
index!="~" AND sourcetype=="~" AND host!="~",3,\
index=="~" AND sourcetype!="~" AND host!="~",4,\
index=="~" AND sourcetype=="~" AND host!="~",5,\
index=="~" AND sourcetype!="~" AND host=="~",6,\
index!="~" AND sourcetype=="~" AND host=="~",7,\
comments LIKE("default entry%"), 8,\
index=="~" AND sourcetype=="~" AND host=="~",9)\
| eval index=lower(index), sourcetype=lower(sourcetype), host=lower(host)\
| sort order index sourcetype host\
| rex mode=sed field=index "s/~/*/g" | rex mode=sed field=sourcetype "s/~/*/g" | rex mode=sed field=host "s/~/*/g"\
| fields - _key, suppress_epoch | table *\
| outputlookup create_empty=f override_if_empty=f bh_suppressions

[Broken Hosts - Clear Permanent Suppressions from expectedTime]
description = Run this search once upon upgrade from 4.x.x to 5.x.x
disabled = 1
dispatch.earliest_time = -1d@d
dispatch.ttl = 300
display.general.timeRangePicker.show = 0
enableSched = 0
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = | inputlookup expectedTime\
| where lateSecs!=0\
| sort 0 + order\
| outputlookup create_empty=f override_if_empty=f expectedTime