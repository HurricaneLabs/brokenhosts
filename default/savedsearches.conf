[Broken Log Sources Sanity Check]
action.email = 1
action.email.format = csv
action.email.include.results_link = 0
action.email.inline = 0
action.email.message.alert = The alert condition for '$name$' was triggered.\
\
$result.Message$
action.email.reportServerEnabled = 0
action.email.sendresults = 0
action.email.subject = Splunk Alert: $name$
action.email.to = $result.contact$
alert.digest_mode = 0
alert.suppress = 1
alert.suppress.period = 1h
alert.suppress.fields = host,index
alert.track = 0
alert.expires = 10m
counttype = number of events
cron_schedule = */10 * * * *
description = Checks how long since we've gotten data from various hosts
disabled = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = search
search = | dbinspect index=* | dedup index | search NOT index=_* NOT index=*summary* NOT index=*notable* NOT index=firedalerts \
| map search="metadata type=hosts index=$index$ | eval index=\"$index$\"" maxsearches=1000\
| eval Last=strftime(lastTime, "%D %H:%M:%S") | eval host=lower(host)\
| lookup expectedTime index,host OUTPUT | convert auto(suppressUntil)  | fillnull value="" contact\
| eval lateSecs=if(suppressUntil > now(),0,lateSecs) | eval lateSecs=mvindex(lateSecs,0) | eval contact=mvindex(contact,0) \
| eval suppressUntil=mvindex(suppressUntil,0) | where lateSecs > 0 | where lastTime < now() - lateSecs | eval howLateSecs=now() - lastTime \
| eval howLate=tostring(howLateSecs,"duration") | rex field=howLate mode=sed "s/\+/ days /" | rex field=howLate mode=sed "s/^1 days/1 day /" \
| eval suppressDate=strftime(suppressUntil,"%D %H:%M:%S") | sort lastTime | eval message=index.", ".host.", ".Last.", ".howLate."" | stats list(message) as Message by contact | eval Message=mvappend("index, host, Time Of Last Data, Time Since Last Data",Message)
