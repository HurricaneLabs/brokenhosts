[Broken Hosts - Auto Sort]
alert.track = 0
cron_schedule = 8-59/10 * * * *
description = Automatically Sort the expectedTime suppression table in a way that prevents false positives on suppressed items.
disabled = 0
dispatch.earliest_time = 0
dispatch.ttl = 300
display.general.timeRangePicker.show = 0
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
schedule_window = 5
search = | inputlookup expectedTime\
| rex mode=sed field=index "s/\*/~/g" | rex mode=sed field=sourcetype "s/\*/~/g" | rex mode=sed field=host "s/\*/~/g"\
| eval order=case(\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",1,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",2,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",3,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil!="0",4,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil!="0",5,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs==0 AND suppressUntil!="0",6,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil!="0",7,\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",8,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",9,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",10,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",11,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil!="0",12,\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil!="0",13,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil!="0",14,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs!=0 AND suppressUntil!="0",15,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",16,\
index!="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",17,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil=="0",17,\
index!="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil=="0",17,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs==0 AND suppressUntil=="0",17,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs==0 AND suppressUntil=="0",21,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",22,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs==0 AND suppressUntil=="0",23,\
index!="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",24,\
index=="~" AND sourcetype!="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",25,\
index=="~" AND sourcetype=="~" AND host!="~" AND lateSecs!=0 AND suppressUntil=="0",26,\
index=="~" AND sourcetype!="~" AND host=="~" AND lateSecs!=0 AND suppressUntil=="0",27,\
index!="~" AND sourcetype=="~" AND host=="~" AND lateSecs!=0 AND suppressUntil=="0",28\
)\
| eval index=lower(index), sourcetype=lower(sourcetype), host=lower(host)\
| sort order index sourcetype host\
| rex mode=sed field=index "s/~/*/g" | rex mode=sed field=sourcetype "s/~/*/g" | rex mode=sed field=host "s/~/*/g"\
| fields - _key order | table * \
| outputlookup expectedTime

[Broken Hosts Alert - by contact]
action.email = 1
action.email.format = csv
action.email.include.results_link = 0
action.email.message.alert = The alert condition for '$name$' was triggered.\
\
$result.Message$
action.email.to = $result.contact$
alert.digest_mode = 0
alert.suppress = 1
alert.suppress.fields = contact,suppressfield
alert.suppress.period = 2h
alert.track = 0
counttype = number of events
cron_schedule = */30 * * * *
description = Sample Broken Hosts Alert - designed to allow you to send different data to different contacts
disabled = 1
dispatch.earliest_time = -30d@d
dispatch.latest_time = +7d@d
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = index=summary source="bh_stats_gen" | `bh_alert_additions` | typer | rex field=eventtype "bh_aggregate-(?<aggregate_fields>.*)" | eval aggregate_fields=if(isnull(aggregate_fields),orig_index.",".orig_sourcetype.",".orig_host,aggregate_fields)\
| stats max(latest_time) as latest_time values(eventtype) as eventtype by aggregate_fields | rex field=aggregate_fields "(?<index>[^,]+),(?<sourcetype>[^,]+),(?<host>.*)"\
| lookup expectedTime index,host,sourcetype OUTPUT | convert auto(suppressUntil) | eval contact=if(contact="",null(),contact)\
| fillnull value=`default_contact` contact | fillnull value=`default_expected_time` lateSecs\
| eval lateSecs=if(suppressUntil > now(),0,lateSecs) | eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0)\
| where lateSecs != "0" AND ((latest_time < lastAllowed) OR (latest_time > now() + 3000)) AND (now() - latest_time < `ignore_after`) AND searchmatch("NOT eventtype=bh_suppress*")\
| eval howLateSecs=now() - latest_time | eval howLate=if(howLateSecs<0,"-".tostring(abs(howLateSecs),"duration"),tostring(howLateSecs,"duration"))\
| rex field=howLate mode=sed "s/\+/ days /" | rex field=howLate mode=sed "s/^1 days/1 day /"\
| eval suppressDate=strftime(suppressUntil,"%D %H:%M:%S") | sort latest_time | eval Last=strftime(latest_time, "%D %H:%M:%S")\
| eval message=aggregate_fields.", ".Last.", ".howLate."\n"\
| stats list(message) as Message, list(aggregate_fields) as suppressfield by contact\
| eval Message=mvappend("index, sourcetype, host, Time Of Last Data, Time Since Last Data\n",Message)

[bh_stats_gen]
action.summary_index = 1
alert.expires = 30m
alert.track = 0
cron_schedule = */10 * * * *
description = Generates stats for Broken Hosts alerts
dispatch.earliest_time = -1d@d
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
schedule_window = auto
search = | tstats count latest(_time) as latest_time latest(_indextime) as latest_indextime latest(date_zone) as latest_date_zone earliest(_time) as earliest_time earliest(_indextime) as earliest_indextime where _index_earliest=-10m@m `bh_stats_gen_constraints` by index, sourcetype, source, host\
| join type=left sourcetype [rest splunk_server=local /servicesNS/-/-/configs/conf-props | search rename=* | stats count by title, rename  | fields + title rename | rename title as sourcetype]\
| eval host=lower(host) | eval index=lower(index) | eval sourcetype=lower(sourcetype) | eval sourcetype_rename=trim(lower(rename), "\"")\
| `bh_stats_gen_additions`\
| fields - _raw

[Broken Hosts Alert Search]
alert.suppress = 1
alert.suppress.period = 24h
alert.track = 0
counttype = number of events
cron_schedule = */30 * * * *
description = Sample Broken Hosts Alert - uses summary data
disabled = 1
dispatch.earliest_time = -30d@d
dispatch.latest_time = +7d@d
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = broken_hosts
request.ui_dispatch_view = search
search = index=summary source="bh_stats_gen" | `bh_alert_additions` | typer | rex field=eventtype "bh_aggregate-(?<aggregate_fields>.*)" | eval aggregate_fields=if(isnull(aggregate_fields),orig_index.",".orig_sourcetype.",".orig_host,aggregate_fields)\
| stats max(latest_time) as latest_time values(eventtype) as eventtype sum(count) as count by aggregate_fields | rex field=aggregate_fields "(?<index>[^,]+),(?<sourcetype>[^,]+),(?<host>.*)"\
| lookup expectedTime index,host,sourcetype OUTPUT | convert auto(suppressUntil) | fillnull value=`default_expected_time` lateSecs\
| eval lateSecs=if(suppressUntil > now(),0,lateSecs) | eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0)\
| where lateSecs != "0" AND ((latest_time < lastAllowed) OR (latest_time > now() + 3000)) AND (now() - latest_time < `ignore_after`) AND searchmatch("NOT eventtype=bh_suppress*") AND count > `min_count`\
| eval howLateSecs=now() - latest_time | eval howLate=if(howLateSecs<0,"-".tostring(abs(howLateSecs),"duration"),tostring(howLateSecs,"duration"))\
| rex field=howLate mode=sed "s/\+/ days /" | rex field=howLate mode=sed "s/^1 days/1 day /"\
| eval suppressDate=strftime(suppressUntil,"%D %H:%M:%S") | sort latest_time | eval last=strftime(latest_time, "%D %H:%M:%S")\
| fields index, sourcetype, host, last, howLate\
| rename last AS "Time Of Last Data" howLate AS "Time Since Last Data"

